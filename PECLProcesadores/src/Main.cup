import java_cup.runtime.*;
import java.io.*;

parser code {:
	public static void main (String argv[]) throws Exception {
		parser analizador;
		analizador = new parser(new Yylex(new InputStreamReader(System.in)));
		analizador.parse();
	}
:};

terminal PROGRAM, IS, BEGIN, END, VAR, IS_INTEGER, IS_BOOLEAN, READ, WRITE, SKIP, WHILE, DO, IF, THEN, ELSE, AND, OR, TRUE, FALSE, NOT;

terminal ASIGNACION;

terminal MINOR_EQUAL, MINOR, EQUAL, MAJOR, MAJOR_EQUAL, MINOR_MAJOR;

terminal SUMA, RESTA, MULTIPLICACION, DIVISION;

terminal LPARENT, RPARENT, COMA, SEMI_COLON, COLON;

terminal String IDENTIFIER;
terminal int INTEGER;
terminal boolean BOOLEAN;

non terminal Programa program;
non terminal vars;
non terminal var;
non terminal var_identifier;
non terminal char type;
non terminal statements;
non terminal statement;

// Es obligatorio que la definición del programa se haga al principio
start with program;

program ::= PROGRAM IDENTIFIER:i 
			{:
				Programa p = new Programa(i);
			:}
			IS 
				vars:v
			BEGIN 
				statements
			END			
;

vars ::= var | var vars
;

var ::= VAR var_identifier:v COLON type:t SEMI_COLON
	{:
		if(t == 'b'){
		// TODO Aquí sólo deberíamos guardar lista de variables, generada en var_identifier
			p.addVar(new Bool(v, true););
		} else if(t == 'i') {
			p.addVar(new Int(v, true););
		}
	:}
;

var_identifier ::= IDENTIFIER | IDENTIFIER COMA var_identifier
;

type ::= IS_INTEGER {: RESULT = 'i'; :} | IS_BOOLEAN {: RESULT = 'b'; :} 
;

statements ::= statement | statement statements
;

// TODO Definir las sentencias
statement ::= LPARENT;